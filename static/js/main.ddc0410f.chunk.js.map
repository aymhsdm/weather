{"version":3,"sources":["page/Header.js","page/List.js","page/Weather.js","page/App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","text","List","data","length","map","value","dt_txt","weather","description","main","temp","humidity","wind","speed","Weather","url","useState","wdata","setWData","q","setCity","newUrl","setUrl","useEffect","fetchData","a","axios","get","result","onSubmit","event","preventDefault","type","onChange","target","list","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAUeA,MARf,SAAgBC,GACd,OACE,wBAAQC,UAAU,aAAlB,SACE,6BAAKD,EAAME,U,+BCiBAC,MApBjB,YAA6B,IAAbC,EAAY,EAAZA,KAAKF,EAAO,EAAPA,KACjB,OAAKE,GAAwB,IAAhBA,EAAKC,OAIhB,mCACCD,EAAKE,KAAI,SAACC,GAAD,OACN,+BACE,6BAAKA,EAAMC,SACX,6BAAKD,EAAME,QAAQ,GAAGC,cACtB,6BAAKH,EAAMI,KAAKC,OAChB,6BAAKL,EAAMI,KAAKE,WAChB,6BAAKN,EAAMO,KAAKC,UALTR,EAAMC,aALZN,G,iBCuDEc,MAvDf,WAEE,IAGMC,EAAI,+GACV,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAmBF,mBAAS,SAA5B,mBAAOG,EAAP,KAAUC,EAAV,KACA,EAAuBJ,mBAASD,EAAI,MAAMI,GAA1C,mBAAOE,EAAP,KAAeC,EAAf,KAqBA,OAVAC,qBAAU,WACR,IAAMC,EAAS,uCAAG,4BAAAC,EAAA,sEACKC,IAAMC,IAAIN,GADf,OACVO,EADU,OAGhBV,EAASU,EAAO1B,MAHA,2CAAH,qDAMfsB,OAIA,sBAAKzB,UAAU,UAAf,UACE,uBAAM8B,SAjBK,SAACC,GACdR,EAAOP,EAAK,MAAMI,GAClBW,EAAMC,kBAesBhC,UAAU,aAApC,UACE,0CACA,uBAAOiC,KAAK,OAAOjC,UAAU,eAC3BM,MAAOc,EAAGc,SAxBF,SAACH,GACfV,EAAQU,EAAMI,OAAO7B,UAwBjB,wBAAQ2B,KAAK,SAAb,uBAEF,sBAAKjC,UAAU,eAAf,UACE,qBAAKA,UAAU,OAAf,SACGoB,IAEH,gCACE,+BACE,8CAAW,8CAAW,8CAAW,8CAAW,mDAGhD,gCACE,cAAC,EAAD,CAAMjB,KAAMe,EAAMkB,KAAMnC,KAAM,iDCrCzBoC,MATf,WACE,OACE,gCACE,cAAC,EAAD,CAAQpC,KAAK,qBACb,cAAC,EAAD,QCGSqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ddc0410f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <header className=\"App-header\">\r\n      <h2>{props.text}</h2>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nfunction List({ data,text}) {\r\n    if (!data || data.length === 0) {\r\n      return text;\r\n    } else {\r\n      return (\r\n      <>  \r\n      {data.map((value)=>(\r\n          <tr key={value.dt_txt}>\r\n            <td>{value.dt_txt}</td>\r\n            <td>{value.weather[0].description}</td>\r\n            <td>{value.main.temp}</td>\r\n            <td>{value.main.humidity}</td>\r\n            <td>{value.wind.speed}</td>\r\n          </tr>\r\n      ))}\r\n      </>\r\n      )\r\n    }\r\n  }\r\n\r\n  export default List;","import React , {useState, useEffect} from \"react\";\r\nimport List from \"./List\";\r\nimport axios from \"axios\";\r\n\r\nfunction Weather() {\r\n\r\n  const appid= \"83274504a7f657146fc66e4f9ba27ea5\"; \r\n  const lang=\"ja\"; \r\n\r\n  const url='https://api.openweathermap.org/data/2.5/forecast?units=metric&appid='+appid+'&lang='+lang;\r\n  const [wdata, setWData]=useState([]);\r\n  const [q, setCity]=useState('TOKYO');\r\n  const [newUrl, setUrl]=useState(url+'&q='+q)\r\n\r\n  const doChange =(event) => {\r\n    setCity(event.target.value)\r\n  }\r\n\r\n  const doSubmit=(event)=> {\r\n    setUrl(url +'&q='+q);\r\n    event.preventDefault();\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios.get(newUrl);\r\n\r\n      setWData(result.data);\r\n    };\r\n\r\n    fetchData();\r\n  });\r\n\r\n  return (\r\n    <div className=\"weather\">\r\n      <form onSubmit={doSubmit} className=\"form-group\">\r\n        <label>CITY </label>\r\n        <input type=\"text\" className=\"form-control\"\r\n          value={q} onChange={doChange} />\r\n        <button type=\"submit\">Search</button>\r\n      </form>\r\n      <div className=\"weather-data\">\r\n        <div className=\"city\">\r\n          {q}\r\n        </div>\r\n        <thead>\r\n          <tr>\r\n            <th>日時</th><th>天気</th><th>気温</th><th>湿度</th><th>風速</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <List data={wdata.list} text={\"Now Loading . . . . . . . . . . . .\"}/>\r\n        </tbody>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Weather;\r\n","import React from 'react';\nimport '../App.css';\nimport Header from './Header';\nimport Weather from './Weather';\n\nfunction App() {\n  return (\n    <div>\n      <Header text='Weather Forecast'/>\n      <Weather/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './page/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}